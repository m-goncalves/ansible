- name: Setup vprofile stack
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
  - name: Import VPC setup variables
    include_vars: vars/vpc_output_vars

  - name: Import vprofile setup variables
    include_vars: vars/vpro_stack_setup

  - name: Create vprofile key
    ec2_key:
      name: vpro-key
      region: "{{region}}"
    register: vpro_key_out
  
  - name: Save ssh key
    copy:
      content: "{{vpro_key_out.key.private_key}}"
      dest: ./login-key.pem
      mode: 600
    when: vpro_key_out.changed

  - name: Create SG for loadbalancer
    ec2_group:
      name: vpro_elb_sg
      description: Allows port 80 from everywhere
      region: "{{ region }}"
      vpc_id: "{{ vpcid }}"
      rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
    register: vpro_elb_sg_out

  - name: Create SG for vprofile stack
    ec2_group:
      name: vprofile_stack_sg
      description: Allows port 80 from everywhere and all port within the SG
      region: "{{ region }}"
      vpc_id: "{{ vpcid }}"
      purge_rules: no
      rules:
        - proto: tcp
          from_port: 80
          to_port: 80
          group_id: "{{ vpro_elb_sg_out.group_id }}"

        - proto: tcp
          from_port: 22
          to_port: 22
          group_id: "{{ BastionSGid }}"
    register: vprofile_stack_sg_out

  - name: Update SG with its own SG id
    ec2_group:
      name: vprofile_sg
      description: Allows port 80 from everywhere and all port within the SG
      region: "{{ region }}"
      vpc_id: "{{ vpcid }}"
      purge_rules: no
      rules:
        - proto: all
          group_id: "{{ vprofile_stack_sg_out.group_id }}"